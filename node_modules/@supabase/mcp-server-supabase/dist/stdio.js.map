{"version":3,"sources":["../src/stdio.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';\nimport { parseArgs } from 'node:util';\nimport packageJson from '../package.json' with { type: 'json' };\nimport { createSupabaseMcpServer } from './server.js';\n\nconst { version } = packageJson;\n\nasync function main() {\n  const {\n    values: {\n      ['access-token']: cliAccessToken,\n      ['project-ref']: projectId,\n      ['read-only']: readOnly,\n      ['api-url']: apiUrl,\n      ['version']: showVersion,\n    },\n  } = parseArgs({\n    options: {\n      ['access-token']: {\n        type: 'string',\n      },\n      ['project-ref']: {\n        type: 'string',\n      },\n      ['read-only']: {\n        type: 'boolean',\n        default: false,\n      },\n      ['api-url']: {\n        type: 'string',\n      },\n      ['version']: {\n        type: 'boolean',\n      },\n    },\n  });\n\n  if (showVersion) {\n    console.log(version);\n    process.exit(0);\n  }\n\n  // Use access token from CLI argument or environment variable\n  const accessToken = cliAccessToken ?? process.env.SUPABASE_ACCESS_TOKEN;\n\n  if (!accessToken) {\n    console.error(\n      'Please provide a personal access token (PAT) with the --access-token flag or set the SUPABASE_ACCESS_TOKEN environment variable'\n    );\n    process.exit(1);\n  }\n\n  const server = createSupabaseMcpServer({\n    platform: {\n      accessToken,\n      apiUrl,\n    },\n    projectId,\n    readOnly,\n  });\n\n  const transport = new StdioServerTransport();\n\n  await server.connect(transport);\n}\n\nmain().catch(console.error);\n"],"mappings":";+CAEA,OAAS,wBAAAA,MAA4B,4CACrC,OAAS,aAAAC,MAAiB,YAI1B,GAAM,CAAE,QAAAC,CAAQ,EAAIC,EAEpB,eAAeC,GAAO,CACpB,GAAM,CACJ,OAAQ,CACN,CAAC,cAAc,EAAGC,EAClB,CAAC,aAAa,EAAGC,EACjB,CAAC,WAAW,EAAGC,EACf,CAAC,SAAS,EAAGC,EACb,CAAC,SAAS,EAAGC,CACf,CACF,EAAIC,EAAU,CACZ,QAAS,CACN,eAAiB,CAChB,KAAM,QACR,EACC,cAAgB,CACf,KAAM,QACR,EACC,YAAc,CACb,KAAM,UACN,QAAS,EACX,EACC,UAAY,CACX,KAAM,QACR,EACC,QAAY,CACX,KAAM,SACR,CACF,CACF,CAAC,EAEGD,IACF,QAAQ,IAAIP,CAAO,EACnB,QAAQ,KAAK,CAAC,GAIhB,IAAMS,EAAcN,GAAkB,QAAQ,IAAI,sBAE7CM,IACH,QAAQ,MACN,iIACF,EACA,QAAQ,KAAK,CAAC,GAGhB,IAAMC,EAASC,EAAwB,CACrC,SAAU,CACR,YAAAF,EACA,OAAAH,CACF,EACA,UAAAF,EACA,SAAAC,CACF,CAAC,EAEKO,EAAY,IAAIC,EAEtB,MAAMH,EAAO,QAAQE,CAAS,CAChC,CAEAV,EAAK,EAAE,MAAM,QAAQ,KAAK","names":["StdioServerTransport","parseArgs","version","package_default","main","cliAccessToken","projectId","readOnly","apiUrl","showVersion","parseArgs","accessToken","server","createSupabaseMcpServer","transport","StdioServerTransport"]}